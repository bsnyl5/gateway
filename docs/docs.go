// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "TuanNguyen",
            "url": "http://www.swagger.io/support",
            "email": "tuannadldev@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/customers": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomerService"
                ],
                "summary": "permission:",
                "parameters": [
                    {
                        "description": " name is comment line",
                        "name": "id",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": " customer name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": " customer email",
                        "name": "email",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": " customer age",
                        "name": "age",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": " customer address",
                        "name": "address",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Body example",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_proto_customer.UpdateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_proto_customer.UpdateCustomerResponse"
                        }
                    }
                }
            }
        },
        "/api/customers/": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomerService"
                ],
                "summary": "permission:",
                "parameters": [
                    {
                        "description": " customer name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": " customer email",
                        "name": "email",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": " customer age",
                        "name": "age",
                        "in": "body",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": " customer address",
                        "name": "address",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Body example",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway_proto_customer.CreateCustomerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_proto_customer.CreateCustomerResponse"
                        }
                    }
                }
            }
        },
        "/api/customers/:id": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CustomerService"
                ],
                "summary": "permission:",
                "parameters": [
                    {
                        "type": "string",
                        "description": " input id",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway_proto_customer.GetCustomerResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gateway_proto_customer.CreateCustomerRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "customer address",
                    "type": "string"
                },
                "age": {
                    "description": "customer age",
                    "type": "integer"
                },
                "email": {
                    "description": "customer email",
                    "type": "string"
                },
                "name": {
                    "description": "customer name",
                    "type": "string"
                }
            }
        },
        "gateway_proto_customer.CreateCustomerResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "customer object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/gateway_proto_customer.Customer"
                        }
                    ]
                }
            }
        },
        "gateway_proto_customer.Customer": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "customer address",
                    "type": "string"
                },
                "age": {
                    "description": "customer age",
                    "type": "integer"
                },
                "email": {
                    "description": "customer email",
                    "type": "string"
                },
                "id": {
                    "description": "customer id",
                    "type": "string"
                },
                "name": {
                    "description": "customer name",
                    "type": "string"
                }
            }
        },
        "gateway_proto_customer.GetCustomerResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "customer object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/gateway_proto_customer.Customer"
                        }
                    ]
                }
            }
        },
        "gateway_proto_customer.UpdateCustomerRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "customer address",
                    "type": "string"
                },
                "age": {
                    "description": "customer age",
                    "type": "integer"
                },
                "email": {
                    "description": "customer email",
                    "type": "string"
                },
                "id": {
                    "description": "name is comment line",
                    "type": "string"
                },
                "name": {
                    "description": "customer name",
                    "type": "string"
                }
            }
        },
        "gateway_proto_customer.UpdateCustomerResponse": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "customer object",
                    "allOf": [
                        {
                            "$ref": "#/definitions/gateway_proto_customer.Customer"
                        }
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3010",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Sample PUBLIC Gateway",
	Description:      "REST -> GRPC API Gateway / Permission and More for all public services",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
